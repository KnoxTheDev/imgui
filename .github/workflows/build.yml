name: build

on:
  push:
  pull_request:
  workflow_run:
    # Use a workflow as a trigger of scheduled builds. Forked repositories can disable scheduled builds by disabling
    # "scheduled" workflow, while maintaining ability to perform local CI builds.
    workflows:
      - scheduled
      - manual
    branches:
      - master
      - docking
    types:
      - requested

jobs:
  Windows:
    runs-on: windows-2025
    env:
      VS_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\
      MSBUILD_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v4

      - name: Fix Projects
        shell: powershell
        run: |
          gci -recurse -filter "*.vcxproj" | ForEach-Object {
            (Get-Content $_.FullName) -Replace "<PlatformToolset>v\d{3}</PlatformToolset>","<PlatformToolset>v142</PlatformToolset>" | Set-Content -Path $_.FullName
            (Get-Content $_.FullName) -Replace "<WindowsTargetPlatformVersion>[\d\.]+</WindowsTargetPlatformVersion>","<WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>" | Set-Content -Path $_.FullName
          }

      - name: Build x64 example_glfw_opengl3
        shell: cmd
        run: '"%MSBUILD_PATH%\MSBuild.exe" examples/example_glfw_opengl3/example_glfw_opengl3.vcxproj /p:Platform=x64 /p:Configuration=Release'

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: examples/example_glfw_opengl3/Release/example_glfw_opengl3.exe

  Android:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r27c # Using a recent, stable NDK version

    - name: Build Android Library (arm64-v8a) with CMake
      run: |
        # Navigate to the directory containing your CMakeLists.txt
        cd examples/example_android_opengl3

        # Configure and build the project using the NDK's CMake toolchain
        cmake -S . -B build \
          -D CMAKE_BUILD_TYPE=Release \
          -D CMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -D ANDROID_ABI=arm64-v8a \
          -D ANDROID_NATIVE_API_LEVEL=21
        
        # Run the actual build process
        cmake --build build
    
    - name: Upload Android Library Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-lib-arm64-v8a
        # The library name comes from 'project(ImGuiHook)' in your CMakeLists.txt
        path: examples/example_android_opengl3/build/libImGuiHook.so